<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Lbk.Error.NotReachable" xml:space="preserve">
    <value>No internet connection</value>
  </data>
  <data name="Lbk.Error.OnAsyncExecute" xml:space="preserve">
    <value>Service Error: </value>
  </data>
  <data name="Lbk.HomeViewModel.Recommend.MailBody" xml:space="preserve">
    <value>Hallo,

also die kostenlose App vom Münchner Löwenbräukeller solltest Du Dir unbedingt mal anschauen.

					http://itunes.apple.com/de/app/lowenbraukeller/id523578226

					Da findest Du auch ein witziges Quiz, bei dem Du eine frische Maß Löwenbräu-Bier gewinnen kannst.

					Servus, bis demnächst im Löwenbräukeller</value>
  </data>
  <data name="Lbk.HomeViewModel.Recommend.MailSubject" xml:space="preserve">
    <value>Löwenbräukeller-App Empfelung</value>
  </data>
  <data name="Lbk.MenuViewModel.PdfDownloadQuestion" xml:space="preserve">
    <value>It is valid for a new menu, which can be downloaded now.</value>
  </data>
  <data name="Lbk.QuestionViewModel.Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Lbk.QuestionViewModel.Right" xml:space="preserve">
    <value>Right!</value>
  </data>
  <data name="Lbk.QuestionViewModel.Wrong" xml:space="preserve">
    <value>Wrong!</value>
  </data>
  <data name="Lbk.QuizNotSuccessResultViewModel.Congratulations" xml:space="preserve">
    <value>Congratulations!</value>
  </data>
  <data name="Lbk.QuizStartViewModel.YouthProtectionQuestion" xml:space="preserve">
    <value>I confirm that I am at least 18 years old.</value>
  </data>
  <data name="Lbk.QuizSuccessResultViewModel.Congratulations" xml:space="preserve">
    <value>Congratulations!</value>
  </data>
  <data name="Lbk.QuizViewModel.AbortQuizQuestion" xml:space="preserve">
    <value>Do you want to leave quiz?</value>
  </data>
  <data name="Lbk.QuizViewModel.CurrentPoints" xml:space="preserve">
    <value>Reaches {0} out of {1} points</value>
  </data>
  <data name="Lbk.QuizViewModel.CurrentQuestionNumber" xml:space="preserve">
    <value>Question {0} of {1}</value>
  </data>
  <data name="Lbk.ReservationConfirmationViewModel.AbortReservationNotConfirmed" xml:space="preserve">
    <value>The cancellation request could not be confirmed.</value>
  </data>
  <data name="Lbk.ReservationConfirmationViewModel.AbortReservationQuestion" xml:space="preserve">
    <value>Do you want to abort the reservation?</value>
  </data>
  <data name="Lbk.ReservationConfirmationViewModel.ReservationNotConfirmed" xml:space="preserve">
    <value>Wrong!
Please enter the code again.</value>
  </data>
  <data name="Lbk.ReservationResultViewModel.AbortedByCustomer" xml:space="preserve">
    <value>The reservation was canceled.</value>
  </data>
  <data name="Lbk.ReservationResultViewModel.DeclinedByRestaurant" xml:space="preserve">
    <value>Liber guest, unfortunately we can not confirm your reservation request.
Please call us at:
089 54726690 an.
Your Löwenbräukeler team.</value>
  </data>
  <data name="Lbk.ReservationResultViewModel.SuccessConfirmation" xml:space="preserve">
    <value>Places are reserved.
You still get a text message with the reservation data.</value>
  </data>
  <data name="Lbk.Share.ButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Lbk.Share.ButtonNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Lbk.Share.ButtonOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Lbk.Share.ButtonYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Lbk.Share.DownloadError" xml:space="preserve">
    <value>There was an error during the download.</value>
  </data>
  <data name="Lbk.Share.LocationDistance" xml:space="preserve">
    <value>To destination approx: {0}</value>
  </data>
  <data name="Lbk.Share.PleaseTryNow" xml:space="preserve">
    <value>Please try again later.</value>
  </data>
  <data name="Lbk.Share.QuizAlreadyReceiveVoucher" xml:space="preserve">
    <value>You have already gotten your coupon code.</value>
  </data>
  <data name="Lbk.Share.QuizMissingPoint" xml:space="preserve">
    <value>Unfortunately there is {0} right answer to a free beer voucher.</value>
  </data>
  <data name="Lbk.Share.QuizMissingPoints" xml:space="preserve">
    <value>Unfortunately, you are missing {0} correct answers to a free beer voucher.</value>
  </data>
  <data name="Lbk.Share.QuizResultPoints" xml:space="preserve">
    <value>You have reached {0} of {1} points.</value>
  </data>
  <data name="Lbk.Share.QuizWinVoucher" xml:space="preserve">
    <value>You have won a free beer voucher.</value>
  </data>
  <data name="Lbk.Share.QuizYourCouponCode" xml:space="preserve">
    <value>Your coupon code:</value>
  </data>
  <data name="Lbk.Share.Sorry" xml:space="preserve">
    <value>Sorry</value>
  </data>
  <data name="Lbk.Test.Text" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Lbk.VoucherListViewModel.ActivateVoucherQuestion" xml:space="preserve">
    <value>Do you want to activate the coupon {0} now?</value>
  </data>
  <data name="Lbk.VoucherListViewModel.UseVoucherQuestion" xml:space="preserve">
    <value>You now have redeemed the voucher. Did you get their drink?</value>
  </data>
  <data name="Lbk.VoucherListViewModel.VoucherActvated" xml:space="preserve">
    <value>The voucher {0} has been successfully activated.</value>
  </data>
  <data name="Lbk.VoucherListViewModel.VoucherAlreadyActvated" xml:space="preserve">
    <value>You have already gotten your coupon code {0}.</value>
  </data>
</root>